/*

 */
// Code generated by main. DO NOT EDIT.

package v1

import (
	v1 "github.com/activatedio/certmanager-webhook-resource/pkg/apis/resource.cert-manager.activated.io/v1"
	"github.com/rancher/lasso/pkg/controller"
	"github.com/rancher/wrangler/v3/pkg/generic"
	"github.com/rancher/wrangler/v3/pkg/schemes"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

func init() {
	schemes.Register(v1.AddToScheme)
}

type Interface interface {
	ACMEDNSChallenge() ACMEDNSChallengeController
}

func New(controllerFactory controller.SharedControllerFactory) Interface {
	return &version{
		controllerFactory: controllerFactory,
	}
}

type version struct {
	controllerFactory controller.SharedControllerFactory
}

func (v *version) ACMEDNSChallenge() ACMEDNSChallengeController {
	return generic.NewController[*v1.ACMEDNSChallenge, *v1.ACMEDNSChallengeList](schema.GroupVersionKind{Group: "resource.cert-manager.activated.io", Version: "v1", Kind: "ACMEDNSChallenge"}, "acmednschallenges", true, v.controllerFactory)
}
